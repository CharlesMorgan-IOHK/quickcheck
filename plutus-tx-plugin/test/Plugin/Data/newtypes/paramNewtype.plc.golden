(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl Maybe (fun (type) (type)))
        (tyvardecl a (type))
        Maybe_match
        (vardecl Just (fun a [ Maybe a ])) (vardecl Nothing [ Maybe a ])
      )
    )
    (lam
      ds
      [ (lam a (type) [ Maybe a ]) (con integer) ]
      [
        [
          { [ { Maybe_match (con integer) } ds ] (con integer) }
          (lam
            p
            (prod (con integer))
            (let
              (nonrec)
              (termbind (strict) (vardecl i (con integer)) (proj 0 p))
              i
            )
          )
        ]
        (lam p (prod ) (con integer 1))
      ]
    )
  )
)